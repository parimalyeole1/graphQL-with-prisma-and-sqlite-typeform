type Query {
  artistList(
    filter: String
    skip: Int
    take: Int
    orderBy: ArtistOrderByInput
  ): ArtistList!
}

type Mutation {
  updateArtist(name: String!): Artist!
}

# type Subscription {
# }

type Artist {
  artistId: ID!
  name: String!
  albums: [Album!]!
}

type Album {
  albumId: ID!
  title: String!
  artistId: ID!
}

input ArtistOrderByInput {
  name: Sort
}

enum Sort {
  asc
  desc
}


type ArtistList {
  artists: [Artist!]!
  count: Int!
}